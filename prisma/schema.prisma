// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model InstagramMessage {
  id             String   @id @default(cuid())
  messageId      String   @unique
  conversationId String
  senderId       String
  recipientId    String
  text           String   @db.Text  // Back to required text field
  timestamp      DateTime
  isRead         Boolean  @default(false)
  
  // Reply functionality
  replyToId      String?  // ID of the message being replied to
  replyTo        InstagramMessage? @relation("MessageReplies", fields: [replyToId], references: [id])
  replies        InstagramMessage[] @relation("MessageReplies")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InstagramUser {
  id           String   @id // Instagram User ID
  username     String?  // Instagram username (@username)
  name         String?  // Display name
  lastFetched  DateTime @default(now())
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InstagramPost {
  id          String   @id @default(cuid())
  postId      String   @unique // Instagram Post ID
  caption     String?  @db.Text // Post caption
  mediaType   String?  // IMAGE, VIDEO, CAROUSEL_ALBUM
  permalink   String?  // Public URL to post
  
  // Relations
  comments    InstagramComment[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InstagramComment {
  id               String   @id @default(cuid())
  commentId        String   @unique // Instagram Comment ID
  postId           String   // Reference to Instagram Post ID
  parentCommentId  String?  // For reply threads
  userId           String   // Instagram User ID who commented
  username         String?  // Cache username for performance
  text             String   @db.Text // Comment text
  timestamp        DateTime // When comment was made
  isReplied        Boolean  @default(false) // Has been replied to
  isHidden         Boolean  @default(false) // Hidden by admin
  
  // Relations
  post             InstagramPost @relation(fields: [postId], references: [postId])
  parentComment    InstagramComment? @relation("CommentReplies", fields: [parentCommentId], references: [commentId])
  replies          InstagramComment[] @relation("CommentReplies")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
